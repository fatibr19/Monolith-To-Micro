/**
 * generated by Xtext 2.37.0
 */
package com.ensias.dsl.microserviceDSL;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Dependency</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see com.ensias.dsl.microserviceDSL.MicroserviceDSLPackage#getDependency()
 * @model
 * @generated
 */
public enum Dependency implements Enumerator
{
  /**
   * The '<em><b>JPA</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JPA_VALUE
   * @generated
   * @ordered
   */
  JPA(0, "JPA", "JPA"),

  /**
   * The '<em><b>SPRING WEB</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SPRING_WEB_VALUE
   * @generated
   * @ordered
   */
  SPRING_WEB(1, "SPRING_WEB", "SPRING_WEB"),

  /**
   * The '<em><b>EUREKA CLIENT</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EUREKA_CLIENT_VALUE
   * @generated
   * @ordered
   */
  EUREKA_CLIENT(2, "EUREKA_CLIENT", "EUREKA_CLIENT"),

  /**
   * The '<em><b>CONFIG CLIENT</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CONFIG_CLIENT_VALUE
   * @generated
   * @ordered
   */
  CONFIG_CLIENT(3, "CONFIG_CLIENT", "CONFIG_CLIENT"),

  /**
   * The '<em><b>ACTUATOR</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ACTUATOR_VALUE
   * @generated
   * @ordered
   */
  ACTUATOR(4, "ACTUATOR", "ACTUATOR"),

  /**
   * The '<em><b>LOMBOK</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #LOMBOK_VALUE
   * @generated
   * @ordered
   */
  LOMBOK(5, "LOMBOK", "LOMBOK");

  /**
   * The '<em><b>JPA</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JPA
   * @model
   * @generated
   * @ordered
   */
  public static final int JPA_VALUE = 0;

  /**
   * The '<em><b>SPRING WEB</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SPRING_WEB
   * @model
   * @generated
   * @ordered
   */
  public static final int SPRING_WEB_VALUE = 1;

  /**
   * The '<em><b>EUREKA CLIENT</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EUREKA_CLIENT
   * @model
   * @generated
   * @ordered
   */
  public static final int EUREKA_CLIENT_VALUE = 2;

  /**
   * The '<em><b>CONFIG CLIENT</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CONFIG_CLIENT
   * @model
   * @generated
   * @ordered
   */
  public static final int CONFIG_CLIENT_VALUE = 3;

  /**
   * The '<em><b>ACTUATOR</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ACTUATOR
   * @model
   * @generated
   * @ordered
   */
  public static final int ACTUATOR_VALUE = 4;

  /**
   * The '<em><b>LOMBOK</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #LOMBOK
   * @model
   * @generated
   * @ordered
   */
  public static final int LOMBOK_VALUE = 5;

  /**
   * An array of all the '<em><b>Dependency</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final Dependency[] VALUES_ARRAY =
    new Dependency[]
    {
      JPA,
      SPRING_WEB,
      EUREKA_CLIENT,
      CONFIG_CLIENT,
      ACTUATOR,
      LOMBOK,
    };

  /**
   * A public read-only list of all the '<em><b>Dependency</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<Dependency> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Dependency</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Dependency get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Dependency result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Dependency</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Dependency getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      Dependency result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Dependency</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static Dependency get(int value)
  {
    switch (value)
    {
      case JPA_VALUE: return JPA;
      case SPRING_WEB_VALUE: return SPRING_WEB;
      case EUREKA_CLIENT_VALUE: return EUREKA_CLIENT;
      case CONFIG_CLIENT_VALUE: return CONFIG_CLIENT;
      case ACTUATOR_VALUE: return ACTUATOR;
      case LOMBOK_VALUE: return LOMBOK;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private Dependency(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //Dependency
