/**
 * generated by Xtext 2.37.0
 */
package com.ensias.dsl.microserviceDSL.impl;

import com.ensias.dsl.microserviceDSL.ApplicationConfig;
import com.ensias.dsl.microserviceDSL.LogLevel;
import com.ensias.dsl.microserviceDSL.MicroserviceDSLPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Application Config</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.ensias.dsl.microserviceDSL.impl.ApplicationConfigImpl#getAppName <em>App Name</em>}</li>
 *   <li>{@link com.ensias.dsl.microserviceDSL.impl.ApplicationConfigImpl#getProfile <em>Profile</em>}</li>
 *   <li>{@link com.ensias.dsl.microserviceDSL.impl.ApplicationConfigImpl#getLoggingLevel <em>Logging Level</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ApplicationConfigImpl extends ServiceConfigEntryImpl implements ApplicationConfig
{
  /**
   * The default value of the '{@link #getAppName() <em>App Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppName()
   * @generated
   * @ordered
   */
  protected static final String APP_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAppName() <em>App Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppName()
   * @generated
   * @ordered
   */
  protected String appName = APP_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getProfile() <em>Profile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProfile()
   * @generated
   * @ordered
   */
  protected static final String PROFILE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProfile() <em>Profile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProfile()
   * @generated
   * @ordered
   */
  protected String profile = PROFILE_EDEFAULT;

  /**
   * The default value of the '{@link #getLoggingLevel() <em>Logging Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLoggingLevel()
   * @generated
   * @ordered
   */
  protected static final LogLevel LOGGING_LEVEL_EDEFAULT = LogLevel.INFO;

  /**
   * The cached value of the '{@link #getLoggingLevel() <em>Logging Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLoggingLevel()
   * @generated
   * @ordered
   */
  protected LogLevel loggingLevel = LOGGING_LEVEL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ApplicationConfigImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MicroserviceDSLPackage.Literals.APPLICATION_CONFIG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAppName()
  {
    return appName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAppName(String newAppName)
  {
    String oldAppName = appName;
    appName = newAppName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MicroserviceDSLPackage.APPLICATION_CONFIG__APP_NAME, oldAppName, appName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getProfile()
  {
    return profile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProfile(String newProfile)
  {
    String oldProfile = profile;
    profile = newProfile;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MicroserviceDSLPackage.APPLICATION_CONFIG__PROFILE, oldProfile, profile));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LogLevel getLoggingLevel()
  {
    return loggingLevel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLoggingLevel(LogLevel newLoggingLevel)
  {
    LogLevel oldLoggingLevel = loggingLevel;
    loggingLevel = newLoggingLevel == null ? LOGGING_LEVEL_EDEFAULT : newLoggingLevel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MicroserviceDSLPackage.APPLICATION_CONFIG__LOGGING_LEVEL, oldLoggingLevel, loggingLevel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MicroserviceDSLPackage.APPLICATION_CONFIG__APP_NAME:
        return getAppName();
      case MicroserviceDSLPackage.APPLICATION_CONFIG__PROFILE:
        return getProfile();
      case MicroserviceDSLPackage.APPLICATION_CONFIG__LOGGING_LEVEL:
        return getLoggingLevel();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MicroserviceDSLPackage.APPLICATION_CONFIG__APP_NAME:
        setAppName((String)newValue);
        return;
      case MicroserviceDSLPackage.APPLICATION_CONFIG__PROFILE:
        setProfile((String)newValue);
        return;
      case MicroserviceDSLPackage.APPLICATION_CONFIG__LOGGING_LEVEL:
        setLoggingLevel((LogLevel)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MicroserviceDSLPackage.APPLICATION_CONFIG__APP_NAME:
        setAppName(APP_NAME_EDEFAULT);
        return;
      case MicroserviceDSLPackage.APPLICATION_CONFIG__PROFILE:
        setProfile(PROFILE_EDEFAULT);
        return;
      case MicroserviceDSLPackage.APPLICATION_CONFIG__LOGGING_LEVEL:
        setLoggingLevel(LOGGING_LEVEL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MicroserviceDSLPackage.APPLICATION_CONFIG__APP_NAME:
        return APP_NAME_EDEFAULT == null ? appName != null : !APP_NAME_EDEFAULT.equals(appName);
      case MicroserviceDSLPackage.APPLICATION_CONFIG__PROFILE:
        return PROFILE_EDEFAULT == null ? profile != null : !PROFILE_EDEFAULT.equals(profile);
      case MicroserviceDSLPackage.APPLICATION_CONFIG__LOGGING_LEVEL:
        return loggingLevel != LOGGING_LEVEL_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (appName: ");
    result.append(appName);
    result.append(", profile: ");
    result.append(profile);
    result.append(", loggingLevel: ");
    result.append(loggingLevel);
    result.append(')');
    return result.toString();
  }

} //ApplicationConfigImpl
