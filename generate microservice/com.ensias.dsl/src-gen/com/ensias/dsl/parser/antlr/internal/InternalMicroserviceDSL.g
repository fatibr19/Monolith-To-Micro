/*
 * generated by Xtext 2.37.0
 */
grammar InternalMicroserviceDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.ensias.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.ensias.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.ensias.dsl.services.MicroserviceDSLGrammarAccess;

}

@parser::members {

 	private MicroserviceDSLGrammarAccess grammarAccess;

    public InternalMicroserviceDSLParser(TokenStream input, MicroserviceDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MicroserviceDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='project'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getProjectKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='group'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getGroupKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getGroupNameQualifiedNameParserRuleCall_3_0());
				}
				lv_groupName_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"groupName",
						lv_groupName_3_0,
						"com.ensias.dsl.MicroserviceDSL.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='version'
		{
			newLeafNode(otherlv_4, grammarAccess.getModelAccess().getVersionKeyword_4());
		}
		(
			(
				lv_version_5_0=RULE_STRING
				{
					newLeafNode(lv_version_5_0, grammarAccess.getModelAccess().getVersionSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"version",
						lv_version_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='description'
		{
			newLeafNode(otherlv_6, grammarAccess.getModelAccess().getDescriptionKeyword_6());
		}
		(
			(
				lv_description_7_0=RULE_STRING
				{
					newLeafNode(lv_description_7_0, grammarAccess.getModelAccess().getDescriptionSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getDiscoveryDiscoveryParserRuleCall_9_0());
				}
				lv_discovery_9_0=ruleDiscovery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"discovery",
						lv_discovery_9_0,
						"com.ensias.dsl.MicroserviceDSL.Discovery");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getConfigServerConfigServerParserRuleCall_10_0());
				}
				lv_configServer_10_0=ruleConfigServer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"configServer",
						lv_configServer_10_0,
						"com.ensias.dsl.MicroserviceDSL.ConfigServer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getServicesServiceParserRuleCall_11_0());
				}
				lv_services_11_0=ruleService
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"services",
						lv_services_11_0,
						"com.ensias.dsl.MicroserviceDSL.Service");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getGatewayGatewayParserRuleCall_12_0());
				}
				lv_gateway_12_0=ruleGateway
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"gateway",
						lv_gateway_12_0,
						"com.ensias.dsl.MicroserviceDSL.Gateway");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleDiscovery
entryRuleDiscovery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiscoveryRule()); }
	iv_ruleDiscovery=ruleDiscovery
	{ $current=$iv_ruleDiscovery.current; }
	EOF;

// Rule Discovery
ruleDiscovery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='discovery'
		{
			newLeafNode(otherlv_0, grammarAccess.getDiscoveryAccess().getDiscoveryKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDiscoveryAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiscoveryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDiscoveryAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='port'
		{
			newLeafNode(otherlv_3, grammarAccess.getDiscoveryAccess().getPortKeyword_3());
		}
		(
			(
				lv_port_4_0=RULE_INT
				{
					newLeafNode(lv_port_4_0, grammarAccess.getDiscoveryAccess().getPortINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiscoveryRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_5='defaultZone'
			{
				newLeafNode(otherlv_5, grammarAccess.getDiscoveryAccess().getDefaultZoneKeyword_5_0());
			}
			(
				(
					lv_defaultZone_6_0=RULE_STRING
					{
						newLeafNode(lv_defaultZone_6_0, grammarAccess.getDiscoveryAccess().getDefaultZoneSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDiscoveryRule());
						}
						setWithLastConsumed(
							$current,
							"defaultZone",
							lv_defaultZone_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_7='dependencies'
		{
			newLeafNode(otherlv_7, grammarAccess.getDiscoveryAccess().getDependenciesKeyword_6());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getDiscoveryAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDiscoveryAccess().getCustomDepsDependencyEnumRuleCall_8_0());
				}
				lv_customDeps_9_0=ruleDependency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiscoveryRule());
					}
					add(
						$current,
						"customDeps",
						lv_customDeps_9_0,
						"com.ensias.dsl.MicroserviceDSL.Dependency");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getDiscoveryAccess().getRightCurlyBracketKeyword_9());
		}
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getDiscoveryAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleGateway
entryRuleGateway returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGatewayRule()); }
	iv_ruleGateway=ruleGateway
	{ $current=$iv_ruleGateway.current; }
	EOF;

// Rule Gateway
ruleGateway returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='gateway'
		{
			newLeafNode(otherlv_0, grammarAccess.getGatewayAccess().getGatewayKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGatewayAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGatewayRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGatewayAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='port'
		{
			newLeafNode(otherlv_3, grammarAccess.getGatewayAccess().getPortKeyword_3());
		}
		(
			(
				lv_port_4_0=RULE_INT
				{
					newLeafNode(lv_port_4_0, grammarAccess.getGatewayAccess().getPortINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGatewayRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_5='routes'
			{
				newLeafNode(otherlv_5, grammarAccess.getGatewayAccess().getRoutesKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getGatewayAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGatewayAccess().getRoutesRouteConfigParserRuleCall_5_2_0());
					}
					lv_routes_7_0=ruleRouteConfig
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGatewayRule());
						}
						add(
							$current,
							"routes",
							lv_routes_7_0,
							"com.ensias.dsl.MicroserviceDSL.RouteConfig");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getGatewayAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
		otherlv_9='dependencies'
		{
			newLeafNode(otherlv_9, grammarAccess.getGatewayAccess().getDependenciesKeyword_6());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getGatewayAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGatewayAccess().getCustomDepsDependencyEnumRuleCall_8_0());
				}
				lv_customDeps_11_0=ruleDependency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGatewayRule());
					}
					add(
						$current,
						"customDeps",
						lv_customDeps_11_0,
						"com.ensias.dsl.MicroserviceDSL.Dependency");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getGatewayAccess().getRightCurlyBracketKeyword_9());
		}
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getGatewayAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleRouteConfig
entryRuleRouteConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRouteConfigRule()); }
	iv_ruleRouteConfig=ruleRouteConfig
	{ $current=$iv_ruleRouteConfig.current; }
	EOF;

// Rule RouteConfig
ruleRouteConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='route'
		{
			newLeafNode(otherlv_0, grammarAccess.getRouteConfigAccess().getRouteKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRouteConfigAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='path'
		{
			newLeafNode(otherlv_2, grammarAccess.getRouteConfigAccess().getPathKeyword_2());
		}
		(
			(
				lv_path_3_0=RULE_STRING
				{
					newLeafNode(lv_path_3_0, grammarAccess.getRouteConfigAccess().getPathSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRouteConfigRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='service'
		{
			newLeafNode(otherlv_4, grammarAccess.getRouteConfigAccess().getServiceKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRouteConfigRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getRouteConfigAccess().getServiceServiceCrossReference_5_0());
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getRouteConfigAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleConfigServer
entryRuleConfigServer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigServerRule()); }
	iv_ruleConfigServer=ruleConfigServer
	{ $current=$iv_ruleConfigServer.current; }
	EOF;

// Rule ConfigServer
ruleConfigServer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='config-server'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigServerAccess().getConfigServerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConfigServerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigServerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigServerAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='port'
		{
			newLeafNode(otherlv_3, grammarAccess.getConfigServerAccess().getPortKeyword_3());
		}
		(
			(
				lv_port_4_0=RULE_INT
				{
					newLeafNode(lv_port_4_0, grammarAccess.getConfigServerAccess().getPortINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigServerRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='git-uri'
		{
			newLeafNode(otherlv_5, grammarAccess.getConfigServerAccess().getGitUriKeyword_5());
		}
		(
			(
				lv_gitUri_6_0=RULE_STRING
				{
					newLeafNode(lv_gitUri_6_0, grammarAccess.getConfigServerAccess().getGitUriSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigServerRule());
					}
					setWithLastConsumed(
						$current,
						"gitUri",
						lv_gitUri_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_7='git-branch'
			{
				newLeafNode(otherlv_7, grammarAccess.getConfigServerAccess().getGitBranchKeyword_7_0());
			}
			(
				(
					lv_gitBranch_8_0=RULE_STRING
					{
						newLeafNode(lv_gitBranch_8_0, grammarAccess.getConfigServerAccess().getGitBranchSTRINGTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConfigServerRule());
						}
						setWithLastConsumed(
							$current,
							"gitBranch",
							lv_gitBranch_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_9='dependencies'
		{
			newLeafNode(otherlv_9, grammarAccess.getConfigServerAccess().getDependenciesKeyword_8());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getConfigServerAccess().getLeftCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigServerAccess().getCustomDepsDependencyEnumRuleCall_10_0());
				}
				lv_customDeps_11_0=ruleDependency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigServerRule());
					}
					add(
						$current,
						"customDeps",
						lv_customDeps_11_0,
						"com.ensias.dsl.MicroserviceDSL.Dependency");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getConfigServerAccess().getRightCurlyBracketKeyword_11());
		}
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getConfigServerAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleService
entryRuleService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	iv_ruleService=ruleService
	{ $current=$iv_ruleService.current; }
	EOF;

// Rule Service
ruleService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='service'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='dependencies'
		{
			newLeafNode(otherlv_3, grammarAccess.getServiceAccess().getDependenciesKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getDependenciesDependencyEnumRuleCall_5_0());
				}
				lv_dependencies_5_0=ruleDependency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_5_0,
						"com.ensias.dsl.MicroserviceDSL.Dependency");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_7='config'
		{
			newLeafNode(otherlv_7, grammarAccess.getServiceAccess().getConfigKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getConfigurationServiceConfigEntryParserRuleCall_9_0());
				}
				lv_configuration_9_0=ruleServiceConfigEntry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					add(
						$current,
						"configuration",
						lv_configuration_9_0,
						"com.ensias.dsl.MicroserviceDSL.ServiceConfigEntry");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_10());
		}
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleServiceConfigEntry
entryRuleServiceConfigEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceConfigEntryRule()); }
	iv_ruleServiceConfigEntry=ruleServiceConfigEntry
	{ $current=$iv_ruleServiceConfigEntry.current; }
	EOF;

// Rule ServiceConfigEntry
ruleServiceConfigEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getServiceConfigEntryAccess().getServerConfigParserRuleCall_0());
		}
		this_ServerConfig_0=ruleServerConfig
		{
			$current = $this_ServerConfig_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getServiceConfigEntryAccess().getApplicationConfigParserRuleCall_1());
		}
		this_ApplicationConfig_1=ruleApplicationConfig
		{
			$current = $this_ApplicationConfig_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getServiceConfigEntryAccess().getDatabaseConfigParserRuleCall_2());
		}
		this_DatabaseConfig_2=ruleDatabaseConfig
		{
			$current = $this_DatabaseConfig_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getServiceConfigEntryAccess().getActuatorConfigParserRuleCall_3());
		}
		this_ActuatorConfig_3=ruleActuatorConfig
		{
			$current = $this_ActuatorConfig_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleServerConfig
entryRuleServerConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServerConfigRule()); }
	iv_ruleServerConfig=ruleServerConfig
	{ $current=$iv_ruleServerConfig.current; }
	EOF;

// Rule ServerConfig
ruleServerConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='server-config'
		{
			newLeafNode(otherlv_0, grammarAccess.getServerConfigAccess().getServerConfigKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getServerConfigAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='port'
		{
			newLeafNode(otherlv_2, grammarAccess.getServerConfigAccess().getPortKeyword_2());
		}
		(
			(
				lv_port_3_0=RULE_INT
				{
					newLeafNode(lv_port_3_0, grammarAccess.getServerConfigAccess().getPortINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServerConfigRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_4='context-path'
			{
				newLeafNode(otherlv_4, grammarAccess.getServerConfigAccess().getContextPathKeyword_4_0());
			}
			(
				(
					lv_contextPath_5_0=RULE_STRING
					{
						newLeafNode(lv_contextPath_5_0, grammarAccess.getServerConfigAccess().getContextPathSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServerConfigRule());
						}
						setWithLastConsumed(
							$current,
							"contextPath",
							lv_contextPath_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getServerConfigAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleApplicationConfig
entryRuleApplicationConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApplicationConfigRule()); }
	iv_ruleApplicationConfig=ruleApplicationConfig
	{ $current=$iv_ruleApplicationConfig.current; }
	EOF;

// Rule ApplicationConfig
ruleApplicationConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='application-config'
		{
			newLeafNode(otherlv_0, grammarAccess.getApplicationConfigAccess().getApplicationConfigKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getApplicationConfigAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='name'
			{
				newLeafNode(otherlv_2, grammarAccess.getApplicationConfigAccess().getNameKeyword_2_0());
			}
			(
				(
					lv_appName_3_0=RULE_STRING
					{
						newLeafNode(lv_appName_3_0, grammarAccess.getApplicationConfigAccess().getAppNameSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getApplicationConfigRule());
						}
						setWithLastConsumed(
							$current,
							"appName",
							lv_appName_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_4='profile'
			{
				newLeafNode(otherlv_4, grammarAccess.getApplicationConfigAccess().getProfileKeyword_3_0());
			}
			(
				(
					lv_profile_5_0=RULE_STRING
					{
						newLeafNode(lv_profile_5_0, grammarAccess.getApplicationConfigAccess().getProfileSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getApplicationConfigRule());
						}
						setWithLastConsumed(
							$current,
							"profile",
							lv_profile_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_6='logging-level'
			{
				newLeafNode(otherlv_6, grammarAccess.getApplicationConfigAccess().getLoggingLevelKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getApplicationConfigAccess().getLoggingLevelLogLevelEnumRuleCall_4_1_0());
					}
					lv_loggingLevel_7_0=ruleLogLevel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getApplicationConfigRule());
						}
						set(
							$current,
							"loggingLevel",
							lv_loggingLevel_7_0,
							"com.ensias.dsl.MicroserviceDSL.LogLevel");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getApplicationConfigAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDatabaseConfig
entryRuleDatabaseConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatabaseConfigRule()); }
	iv_ruleDatabaseConfig=ruleDatabaseConfig
	{ $current=$iv_ruleDatabaseConfig.current; }
	EOF;

// Rule DatabaseConfig
ruleDatabaseConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='database-config'
		{
			newLeafNode(otherlv_0, grammarAccess.getDatabaseConfigAccess().getDatabaseConfigKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDatabaseConfigAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='url'
		{
			newLeafNode(otherlv_2, grammarAccess.getDatabaseConfigAccess().getUrlKeyword_2());
		}
		(
			(
				lv_dbUrl_3_0=RULE_STRING
				{
					newLeafNode(lv_dbUrl_3_0, grammarAccess.getDatabaseConfigAccess().getDbUrlSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseConfigRule());
					}
					setWithLastConsumed(
						$current,
						"dbUrl",
						lv_dbUrl_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='username'
		{
			newLeafNode(otherlv_4, grammarAccess.getDatabaseConfigAccess().getUsernameKeyword_4());
		}
		(
			(
				lv_dbUsername_5_0=RULE_STRING
				{
					newLeafNode(lv_dbUsername_5_0, grammarAccess.getDatabaseConfigAccess().getDbUsernameSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseConfigRule());
					}
					setWithLastConsumed(
						$current,
						"dbUsername",
						lv_dbUsername_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='password'
		{
			newLeafNode(otherlv_6, grammarAccess.getDatabaseConfigAccess().getPasswordKeyword_6());
		}
		(
			(
				lv_dbPassword_7_0=RULE_STRING
				{
					newLeafNode(lv_dbPassword_7_0, grammarAccess.getDatabaseConfigAccess().getDbPasswordSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseConfigRule());
					}
					setWithLastConsumed(
						$current,
						"dbPassword",
						lv_dbPassword_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='driver'
		{
			newLeafNode(otherlv_8, grammarAccess.getDatabaseConfigAccess().getDriverKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatabaseConfigAccess().getDriverDatabaseDriverEnumRuleCall_9_0());
				}
				lv_driver_9_0=ruleDatabaseDriver
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatabaseConfigRule());
					}
					set(
						$current,
						"driver",
						lv_driver_9_0,
						"com.ensias.dsl.MicroserviceDSL.DatabaseDriver");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10='ddl'
			{
				newLeafNode(otherlv_10, grammarAccess.getDatabaseConfigAccess().getDdlKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDatabaseConfigAccess().getDdlDdlTypeEnumRuleCall_10_1_0());
					}
					lv_ddl_11_0=ruleDdlType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDatabaseConfigRule());
						}
						set(
							$current,
							"ddl",
							lv_ddl_11_0,
							"com.ensias.dsl.MicroserviceDSL.DdlType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getDatabaseConfigAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleActuatorConfig
entryRuleActuatorConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActuatorConfigRule()); }
	iv_ruleActuatorConfig=ruleActuatorConfig
	{ $current=$iv_ruleActuatorConfig.current; }
	EOF;

// Rule ActuatorConfig
ruleActuatorConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actuator-config'
		{
			newLeafNode(otherlv_0, grammarAccess.getActuatorConfigAccess().getActuatorConfigKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getActuatorConfigAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='healthcheck-path'
			{
				newLeafNode(otherlv_2, grammarAccess.getActuatorConfigAccess().getHealthcheckPathKeyword_2_0());
			}
			(
				(
					lv_healthcheckPath_3_0=RULE_STRING
					{
						newLeafNode(lv_healthcheckPath_3_0, grammarAccess.getActuatorConfigAccess().getHealthcheckPathSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActuatorConfigRule());
						}
						setWithLastConsumed(
							$current,
							"healthcheckPath",
							lv_healthcheckPath_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_4='metrics-enabled'
			{
				newLeafNode(otherlv_4, grammarAccess.getActuatorConfigAccess().getMetricsEnabledKeyword_3_0());
			}
			(
				(
					(
						lv_metricsEnabled_5_1='true'
						{
							newLeafNode(lv_metricsEnabled_5_1, grammarAccess.getActuatorConfigAccess().getMetricsEnabledTrueKeyword_3_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActuatorConfigRule());
							}
							setWithLastConsumed($current, "metricsEnabled", lv_metricsEnabled_5_1, null);
						}
						    |
						lv_metricsEnabled_5_2='false'
						{
							newLeafNode(lv_metricsEnabled_5_2, grammarAccess.getActuatorConfigAccess().getMetricsEnabledFalseKeyword_3_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActuatorConfigRule());
							}
							setWithLastConsumed($current, "metricsEnabled", lv_metricsEnabled_5_2, null);
						}
					)
				)
			)
		)?
		(
			otherlv_6='info-enabled'
			{
				newLeafNode(otherlv_6, grammarAccess.getActuatorConfigAccess().getInfoEnabledKeyword_4_0());
			}
			(
				(
					(
						lv_infoEnabled_7_1='true'
						{
							newLeafNode(lv_infoEnabled_7_1, grammarAccess.getActuatorConfigAccess().getInfoEnabledTrueKeyword_4_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActuatorConfigRule());
							}
							setWithLastConsumed($current, "infoEnabled", lv_infoEnabled_7_1, null);
						}
						    |
						lv_infoEnabled_7_2='false'
						{
							newLeafNode(lv_infoEnabled_7_2, grammarAccess.getActuatorConfigAccess().getInfoEnabledFalseKeyword_4_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActuatorConfigRule());
							}
							setWithLastConsumed($current, "infoEnabled", lv_infoEnabled_7_2, null);
						}
					)
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getActuatorConfigAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Rule Dependency
ruleDependency returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='JPA'
			{
				$current = grammarAccess.getDependencyAccess().getJPAEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDependencyAccess().getJPAEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='SPRING_WEB'
			{
				$current = grammarAccess.getDependencyAccess().getSPRING_WEBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDependencyAccess().getSPRING_WEBEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='EUREKA_CLIENT'
			{
				$current = grammarAccess.getDependencyAccess().getEUREKA_CLIENTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDependencyAccess().getEUREKA_CLIENTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='CONFIG_CLIENT'
			{
				$current = grammarAccess.getDependencyAccess().getCONFIG_CLIENTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDependencyAccess().getCONFIG_CLIENTEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='ACTUATOR'
			{
				$current = grammarAccess.getDependencyAccess().getACTUATOREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDependencyAccess().getACTUATOREnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='LOMBOK'
			{
				$current = grammarAccess.getDependencyAccess().getLOMBOKEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getDependencyAccess().getLOMBOKEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule DatabaseDriver
ruleDatabaseDriver returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='MYSQL'
			{
				$current = grammarAccess.getDatabaseDriverAccess().getMYSQLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDatabaseDriverAccess().getMYSQLEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='POSTGRESQL'
			{
				$current = grammarAccess.getDatabaseDriverAccess().getPOSTGRESQLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDatabaseDriverAccess().getPOSTGRESQLEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='H2'
			{
				$current = grammarAccess.getDatabaseDriverAccess().getH2EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDatabaseDriverAccess().getH2EnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule DdlType
ruleDdlType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='CREATE'
			{
				$current = grammarAccess.getDdlTypeAccess().getCREATEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDdlTypeAccess().getCREATEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='CREATE_UPDATE'
			{
				$current = grammarAccess.getDdlTypeAccess().getCREATE_UPDATEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDdlTypeAccess().getCREATE_UPDATEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule LogLevel
ruleLogLevel returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='INFO'
			{
				$current = grammarAccess.getLogLevelAccess().getINFOEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLogLevelAccess().getINFOEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='DEBUG'
			{
				$current = grammarAccess.getLogLevelAccess().getDEBUGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLogLevelAccess().getDEBUGEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='WARN'
			{
				$current = grammarAccess.getLogLevelAccess().getWARNEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLogLevelAccess().getWARNEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='ERROR'
			{
				$current = grammarAccess.getLogLevelAccess().getERROREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getLogLevelAccess().getERROREnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='TRACE'
			{
				$current = grammarAccess.getLogLevelAccess().getTRACEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getLogLevelAccess().getTRACEEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
