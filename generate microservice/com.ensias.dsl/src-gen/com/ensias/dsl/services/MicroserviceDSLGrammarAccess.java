/*
 * generated by Xtext 2.37.0
 */
package com.ensias.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MicroserviceDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cGroupKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cGroupNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGroupNameQualifiedNameParserRuleCall_3_0 = (RuleCall)cGroupNameAssignment_3.eContents().get(0);
		private final Keyword cVersionKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cVersionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cVersionSTRINGTerminalRuleCall_5_0 = (RuleCall)cVersionAssignment_5.eContents().get(0);
		private final Keyword cDescriptionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDescriptionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_7_0 = (RuleCall)cDescriptionAssignment_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cDiscoveryAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDiscoveryDiscoveryParserRuleCall_9_0 = (RuleCall)cDiscoveryAssignment_9.eContents().get(0);
		private final Assignment cConfigServerAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConfigServerConfigServerParserRuleCall_10_0 = (RuleCall)cConfigServerAssignment_10.eContents().get(0);
		private final Assignment cServicesAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cServicesServiceParserRuleCall_11_0 = (RuleCall)cServicesAssignment_11.eContents().get(0);
		private final Assignment cGatewayAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cGatewayGatewayParserRuleCall_12_0 = (RuleCall)cGatewayAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Model:
		//    'project' name=ID
		//    'group' groupName=QualifiedName
		//    'version' version=STRING
		//    'description' description=STRING
		//    '{'
		//    discovery=Discovery
		//    configServer=ConfigServer
		//    services+=Service*
		//    gateway=Gateway
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'project' name=ID
		//'group' groupName=QualifiedName
		//'version' version=STRING
		//'description' description=STRING
		//'{'
		//discovery=Discovery
		//configServer=ConfigServer
		//services+=Service*
		//gateway=Gateway
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'project'
		public Keyword getProjectKeyword_0() { return cProjectKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'group'
		public Keyword getGroupKeyword_2() { return cGroupKeyword_2; }
		
		//groupName=QualifiedName
		public Assignment getGroupNameAssignment_3() { return cGroupNameAssignment_3; }
		
		//QualifiedName
		public RuleCall getGroupNameQualifiedNameParserRuleCall_3_0() { return cGroupNameQualifiedNameParserRuleCall_3_0; }
		
		//'version'
		public Keyword getVersionKeyword_4() { return cVersionKeyword_4; }
		
		//version=STRING
		public Assignment getVersionAssignment_5() { return cVersionAssignment_5; }
		
		//STRING
		public RuleCall getVersionSTRINGTerminalRuleCall_5_0() { return cVersionSTRINGTerminalRuleCall_5_0; }
		
		//'description'
		public Keyword getDescriptionKeyword_6() { return cDescriptionKeyword_6; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_7() { return cDescriptionAssignment_7; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_7_0() { return cDescriptionSTRINGTerminalRuleCall_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//discovery=Discovery
		public Assignment getDiscoveryAssignment_9() { return cDiscoveryAssignment_9; }
		
		//Discovery
		public RuleCall getDiscoveryDiscoveryParserRuleCall_9_0() { return cDiscoveryDiscoveryParserRuleCall_9_0; }
		
		//configServer=ConfigServer
		public Assignment getConfigServerAssignment_10() { return cConfigServerAssignment_10; }
		
		//ConfigServer
		public RuleCall getConfigServerConfigServerParserRuleCall_10_0() { return cConfigServerConfigServerParserRuleCall_10_0; }
		
		//services+=Service*
		public Assignment getServicesAssignment_11() { return cServicesAssignment_11; }
		
		//Service
		public RuleCall getServicesServiceParserRuleCall_11_0() { return cServicesServiceParserRuleCall_11_0; }
		
		//gateway=Gateway
		public Assignment getGatewayAssignment_12() { return cGatewayAssignment_12; }
		
		//Gateway
		public RuleCall getGatewayGatewayParserRuleCall_12_0() { return cGatewayGatewayParserRuleCall_12_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class DiscoveryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.Discovery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDiscoveryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPortKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPortAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPortINTTerminalRuleCall_4_0 = (RuleCall)cPortAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDefaultZoneKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDefaultZoneAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDefaultZoneSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cDefaultZoneAssignment_5_1.eContents().get(0);
		private final Keyword cDependenciesKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cCustomDepsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCustomDepsDependencyEnumRuleCall_8_0 = (RuleCall)cCustomDepsAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Discovery:
		//    'discovery' name=ID '{'
		//        'port' port=INT
		//        ('defaultZone' defaultZone=STRING)?
		//        'dependencies' '{' customDeps+=Dependency* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'discovery' name=ID '{'
		//    'port' port=INT
		//    ('defaultZone' defaultZone=STRING)?
		//    'dependencies' '{' customDeps+=Dependency* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'discovery'
		public Keyword getDiscoveryKeyword_0() { return cDiscoveryKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'port'
		public Keyword getPortKeyword_3() { return cPortKeyword_3; }
		
		//port=INT
		public Assignment getPortAssignment_4() { return cPortAssignment_4; }
		
		//INT
		public RuleCall getPortINTTerminalRuleCall_4_0() { return cPortINTTerminalRuleCall_4_0; }
		
		//('defaultZone' defaultZone=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'defaultZone'
		public Keyword getDefaultZoneKeyword_5_0() { return cDefaultZoneKeyword_5_0; }
		
		//defaultZone=STRING
		public Assignment getDefaultZoneAssignment_5_1() { return cDefaultZoneAssignment_5_1; }
		
		//STRING
		public RuleCall getDefaultZoneSTRINGTerminalRuleCall_5_1_0() { return cDefaultZoneSTRINGTerminalRuleCall_5_1_0; }
		
		//'dependencies'
		public Keyword getDependenciesKeyword_6() { return cDependenciesKeyword_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//customDeps+=Dependency*
		public Assignment getCustomDepsAssignment_8() { return cCustomDepsAssignment_8; }
		
		//Dependency
		public RuleCall getCustomDepsDependencyEnumRuleCall_8_0() { return cCustomDepsDependencyEnumRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class GatewayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.Gateway");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGatewayKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPortKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPortAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPortINTTerminalRuleCall_4_0 = (RuleCall)cPortAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRoutesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cRoutesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cRoutesRouteConfigParserRuleCall_5_2_0 = (RuleCall)cRoutesAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cDependenciesKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cCustomDepsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCustomDepsDependencyEnumRuleCall_8_0 = (RuleCall)cCustomDepsAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Gateway:
		//    'gateway' name=ID '{'
		//        'port' port=INT
		//        ('routes' '{' routes+=RouteConfig* '}')?
		//        'dependencies' '{' customDeps+=Dependency* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'gateway' name=ID '{'
		//    'port' port=INT
		//    ('routes' '{' routes+=RouteConfig* '}')?
		//    'dependencies' '{' customDeps+=Dependency* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'gateway'
		public Keyword getGatewayKeyword_0() { return cGatewayKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'port'
		public Keyword getPortKeyword_3() { return cPortKeyword_3; }
		
		//port=INT
		public Assignment getPortAssignment_4() { return cPortAssignment_4; }
		
		//INT
		public RuleCall getPortINTTerminalRuleCall_4_0() { return cPortINTTerminalRuleCall_4_0; }
		
		//('routes' '{' routes+=RouteConfig* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'routes'
		public Keyword getRoutesKeyword_5_0() { return cRoutesKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//routes+=RouteConfig*
		public Assignment getRoutesAssignment_5_2() { return cRoutesAssignment_5_2; }
		
		//RouteConfig
		public RuleCall getRoutesRouteConfigParserRuleCall_5_2_0() { return cRoutesRouteConfigParserRuleCall_5_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }
		
		//'dependencies'
		public Keyword getDependenciesKeyword_6() { return cDependenciesKeyword_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//customDeps+=Dependency*
		public Assignment getCustomDepsAssignment_8() { return cCustomDepsAssignment_8; }
		
		//Dependency
		public RuleCall getCustomDepsDependencyEnumRuleCall_8_0() { return cCustomDepsDependencyEnumRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class RouteConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.RouteConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRouteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cPathKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathSTRINGTerminalRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		private final Keyword cServiceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cServiceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cServiceServiceCrossReference_5_0 = (CrossReference)cServiceAssignment_5.eContents().get(0);
		private final RuleCall cServiceServiceIDTerminalRuleCall_5_0_1 = (RuleCall)cServiceServiceCrossReference_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RouteConfig:
		//    'route' '{'
		//        'path' path=STRING
		//        'service' service=[Service|ID]  // This establishes the cross-reference using [Service|ID]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'route' '{'
		//    'path' path=STRING
		//    'service' service=[Service|ID]  // This establishes the cross-reference using [Service|ID]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'route'
		public Keyword getRouteKeyword_0() { return cRouteKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'path'
		public Keyword getPathKeyword_2() { return cPathKeyword_2; }
		
		//path=STRING
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }
		
		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_3_0() { return cPathSTRINGTerminalRuleCall_3_0; }
		
		//'service'
		public Keyword getServiceKeyword_4() { return cServiceKeyword_4; }
		
		//service=[Service|ID]
		public Assignment getServiceAssignment_5() { return cServiceAssignment_5; }
		
		//[Service|ID]
		public CrossReference getServiceServiceCrossReference_5_0() { return cServiceServiceCrossReference_5_0; }
		
		//ID
		public RuleCall getServiceServiceIDTerminalRuleCall_5_0_1() { return cServiceServiceIDTerminalRuleCall_5_0_1; }
		
		//// This establishes the cross-reference using [Service|ID]
		//  '}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ConfigServerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.ConfigServer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConfigServerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPortKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPortAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPortINTTerminalRuleCall_4_0 = (RuleCall)cPortAssignment_4.eContents().get(0);
		private final Keyword cGitUriKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cGitUriAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cGitUriSTRINGTerminalRuleCall_6_0 = (RuleCall)cGitUriAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cGitBranchKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cGitBranchAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cGitBranchSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cGitBranchAssignment_7_1.eContents().get(0);
		private final Keyword cDependenciesKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cCustomDepsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cCustomDepsDependencyEnumRuleCall_10_0 = (RuleCall)cCustomDepsAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//ConfigServer:
		//    'config-server' name=ID '{'
		//        'port' port=INT
		//        'git-uri' gitUri=STRING
		//        ('git-branch' gitBranch=STRING)?
		//        'dependencies' '{' customDeps+=Dependency* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'config-server' name=ID '{'
		//    'port' port=INT
		//    'git-uri' gitUri=STRING
		//    ('git-branch' gitBranch=STRING)?
		//    'dependencies' '{' customDeps+=Dependency* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'config-server'
		public Keyword getConfigServerKeyword_0() { return cConfigServerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'port'
		public Keyword getPortKeyword_3() { return cPortKeyword_3; }
		
		//port=INT
		public Assignment getPortAssignment_4() { return cPortAssignment_4; }
		
		//INT
		public RuleCall getPortINTTerminalRuleCall_4_0() { return cPortINTTerminalRuleCall_4_0; }
		
		//'git-uri'
		public Keyword getGitUriKeyword_5() { return cGitUriKeyword_5; }
		
		//gitUri=STRING
		public Assignment getGitUriAssignment_6() { return cGitUriAssignment_6; }
		
		//STRING
		public RuleCall getGitUriSTRINGTerminalRuleCall_6_0() { return cGitUriSTRINGTerminalRuleCall_6_0; }
		
		//('git-branch' gitBranch=STRING)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'git-branch'
		public Keyword getGitBranchKeyword_7_0() { return cGitBranchKeyword_7_0; }
		
		//gitBranch=STRING
		public Assignment getGitBranchAssignment_7_1() { return cGitBranchAssignment_7_1; }
		
		//STRING
		public RuleCall getGitBranchSTRINGTerminalRuleCall_7_1_0() { return cGitBranchSTRINGTerminalRuleCall_7_1_0; }
		
		//'dependencies'
		public Keyword getDependenciesKeyword_8() { return cDependenciesKeyword_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//customDeps+=Dependency*
		public Assignment getCustomDepsAssignment_10() { return cCustomDepsAssignment_10; }
		
		//Dependency
		public RuleCall getCustomDepsDependencyEnumRuleCall_10_0() { return cCustomDepsDependencyEnumRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDependenciesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDependenciesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDependenciesDependencyEnumRuleCall_5_0 = (RuleCall)cDependenciesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cConfigKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cConfigurationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cConfigurationServiceConfigEntryParserRuleCall_9_0 = (RuleCall)cConfigurationAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Service:
		//    'service' name=ID '{'
		//    'dependencies' '{' dependencies+=Dependency* '}'
		//    'config' '{' configuration+=ServiceConfigEntry* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'service' name=ID '{'
		//'dependencies' '{' dependencies+=Dependency* '}'
		//'config' '{' configuration+=ServiceConfigEntry* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'service'
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'dependencies'
		public Keyword getDependenciesKeyword_3() { return cDependenciesKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//dependencies+=Dependency*
		public Assignment getDependenciesAssignment_5() { return cDependenciesAssignment_5; }
		
		//Dependency
		public RuleCall getDependenciesDependencyEnumRuleCall_5_0() { return cDependenciesDependencyEnumRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'config'
		public Keyword getConfigKeyword_7() { return cConfigKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//configuration+=ServiceConfigEntry*
		public Assignment getConfigurationAssignment_9() { return cConfigurationAssignment_9; }
		
		//ServiceConfigEntry
		public RuleCall getConfigurationServiceConfigEntryParserRuleCall_9_0() { return cConfigurationServiceConfigEntryParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ServiceConfigEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.ServiceConfigEntry");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cServerConfigParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cApplicationConfigParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDatabaseConfigParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cActuatorConfigParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ServiceConfigEntry:
		//    ServerConfig | ApplicationConfig | DatabaseConfig | ActuatorConfig;
		@Override public ParserRule getRule() { return rule; }
		
		//ServerConfig | ApplicationConfig | DatabaseConfig | ActuatorConfig
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ServerConfig
		public RuleCall getServerConfigParserRuleCall_0() { return cServerConfigParserRuleCall_0; }
		
		//ApplicationConfig
		public RuleCall getApplicationConfigParserRuleCall_1() { return cApplicationConfigParserRuleCall_1; }
		
		//DatabaseConfig
		public RuleCall getDatabaseConfigParserRuleCall_2() { return cDatabaseConfigParserRuleCall_2; }
		
		//ActuatorConfig
		public RuleCall getActuatorConfigParserRuleCall_3() { return cActuatorConfigParserRuleCall_3; }
	}
	public class ServerConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.ServerConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServerConfigKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cPortKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPortAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPortINTTerminalRuleCall_3_0 = (RuleCall)cPortAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cContextPathKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cContextPathAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cContextPathSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cContextPathAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ServerConfig:
		//    'server-config' '{'
		//        'port' port=INT
		//        ('context-path' contextPath=STRING)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'server-config' '{'
		//    'port' port=INT
		//    ('context-path' contextPath=STRING)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'server-config'
		public Keyword getServerConfigKeyword_0() { return cServerConfigKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'port'
		public Keyword getPortKeyword_2() { return cPortKeyword_2; }
		
		//port=INT
		public Assignment getPortAssignment_3() { return cPortAssignment_3; }
		
		//INT
		public RuleCall getPortINTTerminalRuleCall_3_0() { return cPortINTTerminalRuleCall_3_0; }
		
		//('context-path' contextPath=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'context-path'
		public Keyword getContextPathKeyword_4_0() { return cContextPathKeyword_4_0; }
		
		//contextPath=STRING
		public Assignment getContextPathAssignment_4_1() { return cContextPathAssignment_4_1; }
		
		//STRING
		public RuleCall getContextPathSTRINGTerminalRuleCall_4_1_0() { return cContextPathSTRINGTerminalRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ApplicationConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.ApplicationConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApplicationConfigKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAppNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAppNameSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cAppNameAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cProfileKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cProfileAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cProfileSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cProfileAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLoggingLevelKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLoggingLevelAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLoggingLevelLogLevelEnumRuleCall_4_1_0 = (RuleCall)cLoggingLevelAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ApplicationConfig:
		//    'application-config' '{'
		//        ('name' appName=STRING)?
		//        ('profile' profile=STRING)?
		//        ('logging-level' loggingLevel=LogLevel)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'application-config' '{'
		//    ('name' appName=STRING)?
		//    ('profile' profile=STRING)?
		//    ('logging-level' loggingLevel=LogLevel)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'application-config'
		public Keyword getApplicationConfigKeyword_0() { return cApplicationConfigKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('name' appName=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'name'
		public Keyword getNameKeyword_2_0() { return cNameKeyword_2_0; }
		
		//appName=STRING
		public Assignment getAppNameAssignment_2_1() { return cAppNameAssignment_2_1; }
		
		//STRING
		public RuleCall getAppNameSTRINGTerminalRuleCall_2_1_0() { return cAppNameSTRINGTerminalRuleCall_2_1_0; }
		
		//('profile' profile=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'profile'
		public Keyword getProfileKeyword_3_0() { return cProfileKeyword_3_0; }
		
		//profile=STRING
		public Assignment getProfileAssignment_3_1() { return cProfileAssignment_3_1; }
		
		//STRING
		public RuleCall getProfileSTRINGTerminalRuleCall_3_1_0() { return cProfileSTRINGTerminalRuleCall_3_1_0; }
		
		//('logging-level' loggingLevel=LogLevel)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'logging-level'
		public Keyword getLoggingLevelKeyword_4_0() { return cLoggingLevelKeyword_4_0; }
		
		//loggingLevel=LogLevel
		public Assignment getLoggingLevelAssignment_4_1() { return cLoggingLevelAssignment_4_1; }
		
		//LogLevel
		public RuleCall getLoggingLevelLogLevelEnumRuleCall_4_1_0() { return cLoggingLevelLogLevelEnumRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DatabaseConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.DatabaseConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatabaseConfigKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cUrlKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDbUrlAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDbUrlSTRINGTerminalRuleCall_3_0 = (RuleCall)cDbUrlAssignment_3.eContents().get(0);
		private final Keyword cUsernameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDbUsernameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDbUsernameSTRINGTerminalRuleCall_5_0 = (RuleCall)cDbUsernameAssignment_5.eContents().get(0);
		private final Keyword cPasswordKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDbPasswordAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDbPasswordSTRINGTerminalRuleCall_7_0 = (RuleCall)cDbPasswordAssignment_7.eContents().get(0);
		private final Keyword cDriverKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cDriverAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDriverDatabaseDriverEnumRuleCall_9_0 = (RuleCall)cDriverAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cDdlKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cDdlAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cDdlDdlTypeEnumRuleCall_10_1_0 = (RuleCall)cDdlAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//DatabaseConfig:
		//    'database-config' '{'
		//        'url' dbUrl=STRING
		//        'username' dbUsername=STRING
		//        'password' dbPassword=STRING
		//        'driver' driver=DatabaseDriver
		//        ('ddl' ddl=DdlType )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'database-config' '{'
		//    'url' dbUrl=STRING
		//    'username' dbUsername=STRING
		//    'password' dbPassword=STRING
		//    'driver' driver=DatabaseDriver
		//    ('ddl' ddl=DdlType )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'database-config'
		public Keyword getDatabaseConfigKeyword_0() { return cDatabaseConfigKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'url'
		public Keyword getUrlKeyword_2() { return cUrlKeyword_2; }
		
		//dbUrl=STRING
		public Assignment getDbUrlAssignment_3() { return cDbUrlAssignment_3; }
		
		//STRING
		public RuleCall getDbUrlSTRINGTerminalRuleCall_3_0() { return cDbUrlSTRINGTerminalRuleCall_3_0; }
		
		//'username'
		public Keyword getUsernameKeyword_4() { return cUsernameKeyword_4; }
		
		//dbUsername=STRING
		public Assignment getDbUsernameAssignment_5() { return cDbUsernameAssignment_5; }
		
		//STRING
		public RuleCall getDbUsernameSTRINGTerminalRuleCall_5_0() { return cDbUsernameSTRINGTerminalRuleCall_5_0; }
		
		//'password'
		public Keyword getPasswordKeyword_6() { return cPasswordKeyword_6; }
		
		//dbPassword=STRING
		public Assignment getDbPasswordAssignment_7() { return cDbPasswordAssignment_7; }
		
		//STRING
		public RuleCall getDbPasswordSTRINGTerminalRuleCall_7_0() { return cDbPasswordSTRINGTerminalRuleCall_7_0; }
		
		//'driver'
		public Keyword getDriverKeyword_8() { return cDriverKeyword_8; }
		
		//driver=DatabaseDriver
		public Assignment getDriverAssignment_9() { return cDriverAssignment_9; }
		
		//DatabaseDriver
		public RuleCall getDriverDatabaseDriverEnumRuleCall_9_0() { return cDriverDatabaseDriverEnumRuleCall_9_0; }
		
		//('ddl' ddl=DdlType )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'ddl'
		public Keyword getDdlKeyword_10_0() { return cDdlKeyword_10_0; }
		
		//ddl=DdlType
		public Assignment getDdlAssignment_10_1() { return cDdlAssignment_10_1; }
		
		//DdlType
		public RuleCall getDdlDdlTypeEnumRuleCall_10_1_0() { return cDdlDdlTypeEnumRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ActuatorConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.ActuatorConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActuatorConfigKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cHealthcheckPathKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cHealthcheckPathAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cHealthcheckPathSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cHealthcheckPathAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMetricsEnabledKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMetricsEnabledAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final Alternatives cMetricsEnabledAlternatives_3_1_0 = (Alternatives)cMetricsEnabledAssignment_3_1.eContents().get(0);
		private final Keyword cMetricsEnabledTrueKeyword_3_1_0_0 = (Keyword)cMetricsEnabledAlternatives_3_1_0.eContents().get(0);
		private final Keyword cMetricsEnabledFalseKeyword_3_1_0_1 = (Keyword)cMetricsEnabledAlternatives_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInfoEnabledKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInfoEnabledAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Alternatives cInfoEnabledAlternatives_4_1_0 = (Alternatives)cInfoEnabledAssignment_4_1.eContents().get(0);
		private final Keyword cInfoEnabledTrueKeyword_4_1_0_0 = (Keyword)cInfoEnabledAlternatives_4_1_0.eContents().get(0);
		private final Keyword cInfoEnabledFalseKeyword_4_1_0_1 = (Keyword)cInfoEnabledAlternatives_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ActuatorConfig:
		//    'actuator-config' '{'
		//        ('healthcheck-path' healthcheckPath=STRING)?
		//        ('metrics-enabled' metricsEnabled=('true'|'false'))?
		//        ('info-enabled' infoEnabled=('true'|'false'))?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'actuator-config' '{'
		//    ('healthcheck-path' healthcheckPath=STRING)?
		//    ('metrics-enabled' metricsEnabled=('true'|'false'))?
		//    ('info-enabled' infoEnabled=('true'|'false'))?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'actuator-config'
		public Keyword getActuatorConfigKeyword_0() { return cActuatorConfigKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('healthcheck-path' healthcheckPath=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'healthcheck-path'
		public Keyword getHealthcheckPathKeyword_2_0() { return cHealthcheckPathKeyword_2_0; }
		
		//healthcheckPath=STRING
		public Assignment getHealthcheckPathAssignment_2_1() { return cHealthcheckPathAssignment_2_1; }
		
		//STRING
		public RuleCall getHealthcheckPathSTRINGTerminalRuleCall_2_1_0() { return cHealthcheckPathSTRINGTerminalRuleCall_2_1_0; }
		
		//('metrics-enabled' metricsEnabled=('true'|'false'))?
		public Group getGroup_3() { return cGroup_3; }
		
		//'metrics-enabled'
		public Keyword getMetricsEnabledKeyword_3_0() { return cMetricsEnabledKeyword_3_0; }
		
		//metricsEnabled=('true'|'false')
		public Assignment getMetricsEnabledAssignment_3_1() { return cMetricsEnabledAssignment_3_1; }
		
		//('true'|'false')
		public Alternatives getMetricsEnabledAlternatives_3_1_0() { return cMetricsEnabledAlternatives_3_1_0; }
		
		//'true'
		public Keyword getMetricsEnabledTrueKeyword_3_1_0_0() { return cMetricsEnabledTrueKeyword_3_1_0_0; }
		
		//'false'
		public Keyword getMetricsEnabledFalseKeyword_3_1_0_1() { return cMetricsEnabledFalseKeyword_3_1_0_1; }
		
		//('info-enabled' infoEnabled=('true'|'false'))?
		public Group getGroup_4() { return cGroup_4; }
		
		//'info-enabled'
		public Keyword getInfoEnabledKeyword_4_0() { return cInfoEnabledKeyword_4_0; }
		
		//infoEnabled=('true'|'false')
		public Assignment getInfoEnabledAssignment_4_1() { return cInfoEnabledAssignment_4_1; }
		
		//('true'|'false')
		public Alternatives getInfoEnabledAlternatives_4_1_0() { return cInfoEnabledAlternatives_4_1_0; }
		
		//'true'
		public Keyword getInfoEnabledTrueKeyword_4_1_0_0() { return cInfoEnabledTrueKeyword_4_1_0_0; }
		
		//'false'
		public Keyword getInfoEnabledFalseKeyword_4_1_0_1() { return cInfoEnabledFalseKeyword_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//    ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	
	public class DependencyElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.Dependency");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cJPAEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cJPAJPAKeyword_0_0 = (Keyword)cJPAEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSPRING_WEBEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSPRING_WEBSPRING_WEBKeyword_1_0 = (Keyword)cSPRING_WEBEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEUREKA_CLIENTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEUREKA_CLIENTEUREKA_CLIENTKeyword_2_0 = (Keyword)cEUREKA_CLIENTEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCONFIG_CLIENTEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCONFIG_CLIENTCONFIG_CLIENTKeyword_3_0 = (Keyword)cCONFIG_CLIENTEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cACTUATOREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cACTUATORACTUATORKeyword_4_0 = (Keyword)cACTUATOREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cLOMBOKEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cLOMBOKLOMBOKKeyword_5_0 = (Keyword)cLOMBOKEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum Dependency:
		//    JPA | SPRING_WEB | EUREKA_CLIENT | CONFIG_CLIENT | ACTUATOR | LOMBOK ;
		public EnumRule getRule() { return rule; }
		
		//JPA | SPRING_WEB | EUREKA_CLIENT | CONFIG_CLIENT | ACTUATOR | LOMBOK
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//JPA
		public EnumLiteralDeclaration getJPAEnumLiteralDeclaration_0() { return cJPAEnumLiteralDeclaration_0; }
		
		public Keyword getJPAJPAKeyword_0_0() { return cJPAJPAKeyword_0_0; }
		
		//SPRING_WEB
		public EnumLiteralDeclaration getSPRING_WEBEnumLiteralDeclaration_1() { return cSPRING_WEBEnumLiteralDeclaration_1; }
		
		public Keyword getSPRING_WEBSPRING_WEBKeyword_1_0() { return cSPRING_WEBSPRING_WEBKeyword_1_0; }
		
		//EUREKA_CLIENT
		public EnumLiteralDeclaration getEUREKA_CLIENTEnumLiteralDeclaration_2() { return cEUREKA_CLIENTEnumLiteralDeclaration_2; }
		
		public Keyword getEUREKA_CLIENTEUREKA_CLIENTKeyword_2_0() { return cEUREKA_CLIENTEUREKA_CLIENTKeyword_2_0; }
		
		//CONFIG_CLIENT
		public EnumLiteralDeclaration getCONFIG_CLIENTEnumLiteralDeclaration_3() { return cCONFIG_CLIENTEnumLiteralDeclaration_3; }
		
		public Keyword getCONFIG_CLIENTCONFIG_CLIENTKeyword_3_0() { return cCONFIG_CLIENTCONFIG_CLIENTKeyword_3_0; }
		
		//ACTUATOR
		public EnumLiteralDeclaration getACTUATOREnumLiteralDeclaration_4() { return cACTUATOREnumLiteralDeclaration_4; }
		
		public Keyword getACTUATORACTUATORKeyword_4_0() { return cACTUATORACTUATORKeyword_4_0; }
		
		//LOMBOK
		public EnumLiteralDeclaration getLOMBOKEnumLiteralDeclaration_5() { return cLOMBOKEnumLiteralDeclaration_5; }
		
		public Keyword getLOMBOKLOMBOKKeyword_5_0() { return cLOMBOKLOMBOKKeyword_5_0; }
	}
	public class DatabaseDriverElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.DatabaseDriver");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMYSQLEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMYSQLMYSQLKeyword_0_0 = (Keyword)cMYSQLEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPOSTGRESQLEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPOSTGRESQLPOSTGRESQLKeyword_1_0 = (Keyword)cPOSTGRESQLEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cH2EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cH2H2Keyword_2_0 = (Keyword)cH2EnumLiteralDeclaration_2.eContents().get(0);
		
		//enum DatabaseDriver:
		//    MYSQL | POSTGRESQL | H2;
		public EnumRule getRule() { return rule; }
		
		//MYSQL | POSTGRESQL | H2
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MYSQL
		public EnumLiteralDeclaration getMYSQLEnumLiteralDeclaration_0() { return cMYSQLEnumLiteralDeclaration_0; }
		
		public Keyword getMYSQLMYSQLKeyword_0_0() { return cMYSQLMYSQLKeyword_0_0; }
		
		//POSTGRESQL
		public EnumLiteralDeclaration getPOSTGRESQLEnumLiteralDeclaration_1() { return cPOSTGRESQLEnumLiteralDeclaration_1; }
		
		public Keyword getPOSTGRESQLPOSTGRESQLKeyword_1_0() { return cPOSTGRESQLPOSTGRESQLKeyword_1_0; }
		
		//H2
		public EnumLiteralDeclaration getH2EnumLiteralDeclaration_2() { return cH2EnumLiteralDeclaration_2; }
		
		public Keyword getH2H2Keyword_2_0() { return cH2H2Keyword_2_0; }
	}
	public class DdlTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.DdlType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCREATEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCREATECREATEKeyword_0_0 = (Keyword)cCREATEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCREATE_UPDATEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCREATE_UPDATECREATE_UPDATEKeyword_1_0 = (Keyword)cCREATE_UPDATEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum DdlType:
		//    CREATE | CREATE_UPDATE;
		public EnumRule getRule() { return rule; }
		
		//CREATE | CREATE_UPDATE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CREATE
		public EnumLiteralDeclaration getCREATEEnumLiteralDeclaration_0() { return cCREATEEnumLiteralDeclaration_0; }
		
		public Keyword getCREATECREATEKeyword_0_0() { return cCREATECREATEKeyword_0_0; }
		
		//CREATE_UPDATE
		public EnumLiteralDeclaration getCREATE_UPDATEEnumLiteralDeclaration_1() { return cCREATE_UPDATEEnumLiteralDeclaration_1; }
		
		public Keyword getCREATE_UPDATECREATE_UPDATEKeyword_1_0() { return cCREATE_UPDATECREATE_UPDATEKeyword_1_0; }
	}
	public class LogLevelElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.ensias.dsl.MicroserviceDSL.LogLevel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cINFOEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cINFOINFOKeyword_0_0 = (Keyword)cINFOEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDEBUGEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDEBUGDEBUGKeyword_1_0 = (Keyword)cDEBUGEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cWARNEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cWARNWARNKeyword_2_0 = (Keyword)cWARNEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cERROREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cERRORERRORKeyword_3_0 = (Keyword)cERROREnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cTRACEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cTRACETRACEKeyword_4_0 = (Keyword)cTRACEEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum LogLevel:
		//    INFO | DEBUG | WARN | ERROR | TRACE;
		public EnumRule getRule() { return rule; }
		
		//INFO | DEBUG | WARN | ERROR | TRACE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INFO
		public EnumLiteralDeclaration getINFOEnumLiteralDeclaration_0() { return cINFOEnumLiteralDeclaration_0; }
		
		public Keyword getINFOINFOKeyword_0_0() { return cINFOINFOKeyword_0_0; }
		
		//DEBUG
		public EnumLiteralDeclaration getDEBUGEnumLiteralDeclaration_1() { return cDEBUGEnumLiteralDeclaration_1; }
		
		public Keyword getDEBUGDEBUGKeyword_1_0() { return cDEBUGDEBUGKeyword_1_0; }
		
		//WARN
		public EnumLiteralDeclaration getWARNEnumLiteralDeclaration_2() { return cWARNEnumLiteralDeclaration_2; }
		
		public Keyword getWARNWARNKeyword_2_0() { return cWARNWARNKeyword_2_0; }
		
		//ERROR
		public EnumLiteralDeclaration getERROREnumLiteralDeclaration_3() { return cERROREnumLiteralDeclaration_3; }
		
		public Keyword getERRORERRORKeyword_3_0() { return cERRORERRORKeyword_3_0; }
		
		//TRACE
		public EnumLiteralDeclaration getTRACEEnumLiteralDeclaration_4() { return cTRACEEnumLiteralDeclaration_4; }
		
		public Keyword getTRACETRACEKeyword_4_0() { return cTRACETRACEKeyword_4_0; }
	}
	
	private final ModelElements pModel;
	private final DiscoveryElements pDiscovery;
	private final GatewayElements pGateway;
	private final RouteConfigElements pRouteConfig;
	private final ConfigServerElements pConfigServer;
	private final ServiceElements pService;
	private final ServiceConfigEntryElements pServiceConfigEntry;
	private final ServerConfigElements pServerConfig;
	private final ApplicationConfigElements pApplicationConfig;
	private final DatabaseConfigElements pDatabaseConfig;
	private final ActuatorConfigElements pActuatorConfig;
	private final DependencyElements eDependency;
	private final DatabaseDriverElements eDatabaseDriver;
	private final DdlTypeElements eDdlType;
	private final LogLevelElements eLogLevel;
	private final QualifiedNameElements pQualifiedName;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MicroserviceDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pDiscovery = new DiscoveryElements();
		this.pGateway = new GatewayElements();
		this.pRouteConfig = new RouteConfigElements();
		this.pConfigServer = new ConfigServerElements();
		this.pService = new ServiceElements();
		this.pServiceConfigEntry = new ServiceConfigEntryElements();
		this.pServerConfig = new ServerConfigElements();
		this.pApplicationConfig = new ApplicationConfigElements();
		this.pDatabaseConfig = new DatabaseConfigElements();
		this.pActuatorConfig = new ActuatorConfigElements();
		this.eDependency = new DependencyElements();
		this.eDatabaseDriver = new DatabaseDriverElements();
		this.eDdlType = new DdlTypeElements();
		this.eLogLevel = new LogLevelElements();
		this.pQualifiedName = new QualifiedNameElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.ensias.dsl.MicroserviceDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    'project' name=ID
	//    'group' groupName=QualifiedName
	//    'version' version=STRING
	//    'description' description=STRING
	//    '{'
	//    discovery=Discovery
	//    configServer=ConfigServer
	//    services+=Service*
	//    gateway=Gateway
	//    '}';
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Discovery:
	//    'discovery' name=ID '{'
	//        'port' port=INT
	//        ('defaultZone' defaultZone=STRING)?
	//        'dependencies' '{' customDeps+=Dependency* '}'
	//    '}';
	public DiscoveryElements getDiscoveryAccess() {
		return pDiscovery;
	}
	
	public ParserRule getDiscoveryRule() {
		return getDiscoveryAccess().getRule();
	}
	
	//Gateway:
	//    'gateway' name=ID '{'
	//        'port' port=INT
	//        ('routes' '{' routes+=RouteConfig* '}')?
	//        'dependencies' '{' customDeps+=Dependency* '}'
	//    '}';
	public GatewayElements getGatewayAccess() {
		return pGateway;
	}
	
	public ParserRule getGatewayRule() {
		return getGatewayAccess().getRule();
	}
	
	//RouteConfig:
	//    'route' '{'
	//        'path' path=STRING
	//        'service' service=[Service|ID]  // This establishes the cross-reference using [Service|ID]
	//    '}';
	public RouteConfigElements getRouteConfigAccess() {
		return pRouteConfig;
	}
	
	public ParserRule getRouteConfigRule() {
		return getRouteConfigAccess().getRule();
	}
	
	//ConfigServer:
	//    'config-server' name=ID '{'
	//        'port' port=INT
	//        'git-uri' gitUri=STRING
	//        ('git-branch' gitBranch=STRING)?
	//        'dependencies' '{' customDeps+=Dependency* '}'
	//    '}';
	public ConfigServerElements getConfigServerAccess() {
		return pConfigServer;
	}
	
	public ParserRule getConfigServerRule() {
		return getConfigServerAccess().getRule();
	}
	
	//Service:
	//    'service' name=ID '{'
	//    'dependencies' '{' dependencies+=Dependency* '}'
	//    'config' '{' configuration+=ServiceConfigEntry* '}'
	//    '}';
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}
	
	//ServiceConfigEntry:
	//    ServerConfig | ApplicationConfig | DatabaseConfig | ActuatorConfig;
	public ServiceConfigEntryElements getServiceConfigEntryAccess() {
		return pServiceConfigEntry;
	}
	
	public ParserRule getServiceConfigEntryRule() {
		return getServiceConfigEntryAccess().getRule();
	}
	
	//ServerConfig:
	//    'server-config' '{'
	//        'port' port=INT
	//        ('context-path' contextPath=STRING)?
	//    '}';
	public ServerConfigElements getServerConfigAccess() {
		return pServerConfig;
	}
	
	public ParserRule getServerConfigRule() {
		return getServerConfigAccess().getRule();
	}
	
	//ApplicationConfig:
	//    'application-config' '{'
	//        ('name' appName=STRING)?
	//        ('profile' profile=STRING)?
	//        ('logging-level' loggingLevel=LogLevel)?
	//    '}';
	public ApplicationConfigElements getApplicationConfigAccess() {
		return pApplicationConfig;
	}
	
	public ParserRule getApplicationConfigRule() {
		return getApplicationConfigAccess().getRule();
	}
	
	//DatabaseConfig:
	//    'database-config' '{'
	//        'url' dbUrl=STRING
	//        'username' dbUsername=STRING
	//        'password' dbPassword=STRING
	//        'driver' driver=DatabaseDriver
	//        ('ddl' ddl=DdlType )?
	//    '}';
	public DatabaseConfigElements getDatabaseConfigAccess() {
		return pDatabaseConfig;
	}
	
	public ParserRule getDatabaseConfigRule() {
		return getDatabaseConfigAccess().getRule();
	}
	
	//ActuatorConfig:
	//    'actuator-config' '{'
	//        ('healthcheck-path' healthcheckPath=STRING)?
	//        ('metrics-enabled' metricsEnabled=('true'|'false'))?
	//        ('info-enabled' infoEnabled=('true'|'false'))?
	//    '}';
	public ActuatorConfigElements getActuatorConfigAccess() {
		return pActuatorConfig;
	}
	
	public ParserRule getActuatorConfigRule() {
		return getActuatorConfigAccess().getRule();
	}
	
	//enum Dependency:
	//    JPA | SPRING_WEB | EUREKA_CLIENT | CONFIG_CLIENT | ACTUATOR | LOMBOK ;
	public DependencyElements getDependencyAccess() {
		return eDependency;
	}
	
	public EnumRule getDependencyRule() {
		return getDependencyAccess().getRule();
	}
	
	//enum DatabaseDriver:
	//    MYSQL | POSTGRESQL | H2;
	public DatabaseDriverElements getDatabaseDriverAccess() {
		return eDatabaseDriver;
	}
	
	public EnumRule getDatabaseDriverRule() {
		return getDatabaseDriverAccess().getRule();
	}
	
	//enum DdlType:
	//    CREATE | CREATE_UPDATE;
	public DdlTypeElements getDdlTypeAccess() {
		return eDdlType;
	}
	
	public EnumRule getDdlTypeRule() {
		return getDdlTypeAccess().getRule();
	}
	
	//enum LogLevel:
	//    INFO | DEBUG | WARN | ERROR | TRACE;
	public LogLevelElements getLogLevelAccess() {
		return eLogLevel;
	}
	
	public EnumRule getLogLevelRule() {
		return getLogLevelAccess().getRule();
	}
	
	//QualifiedName:
	//    ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
